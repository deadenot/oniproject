.scrollbar-wrap {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}
.scrollbar-wrap .native {
  overflow-y: scroll;
  overflow-x: hidden;
  width: 200%;
}
.scrollbar-wrap .s-content {
  overflow: hidden;
  width: 50%;
}
/*.custom_scroll_bar_handle
    top:0
    right:0
    position:absolute
    width:10px
    height:15px
    background:#c00
    cursor:pointer
    */
.tooltip {
  display: none;
  top: -50px;
  position: absolute;
  margin-left: -50px;
  width: 100px;
  height: 20px;
  line-height: 20px;
  padding: 10px;
  font-size: 14px;
  text-align: center;
  color: #fff;
  background: rgba(0,0,0,0.6);
}
.tooltip:after {
  content: "";
  position: absolute;
  border-width: 10px;
  border-style: solid;
  border-color: rgba(0,0,0,0.6) transparent transparent transparent;
  top: 40px;
  left: 50px;
}
html,
body {
  overflow: hidden;
  padding: 0;
  margin: 0;
  width: 100%;
  height: 100%;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
#loading {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background: -webkit-radial-gradient(center, #101517, #090d0f);
  background: -moz-radial-gradient(center, #101517, #090d0f);
  background: -o-radial-gradient(center, #101517, #090d0f);
  background: -ms-radial-gradient(center, #101517, #090d0f);
  background: radial-gradient(center, #101517, #090d0f);
}
#loading img {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -110px;
  margin-left: -379px;
  opacity: 0.3;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
  filter: alpha(opacity=30);
}
#bottom {
  position: absolute;
  bottom: 0;
  width: 100%;
}
#spell-over {
  background: url("/ui/spell-bar-over.png");
  height: 44px;
  width: 364px;
  position: absolute;
  top: 0;
  left: 0;
}
#spells {
  margin: auto;
  width: 340px;
  background: url("/ui/spell-bar-bg.png");
  font-size: 0;
  padding: 4px 1px;
  height: 44px;
  width: 364px;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
}
#spells img {
  margin: 0;
  width: 32px;
  height: 32px;
}
#spells .img {
  position: relative;
  display: inline-block;
  width: 32px;
  height: 32px;
  margin: 2px;
}
#spells .img .text {
  position: absolute;
  display: none;
  top: 0;
  bottom: 0;
  z-index: 999;
  background: #f00;
}
#spells .img:hover .text {
  display: block;
}
#spells .img:hover .img-over {
  background: no-repeat url("/ui/spell-bar-glass.png");
  width: 32px;
  height: 32px;
  position: absolute;
  top: 1px;
  left: 0px;
}
#chat {
  position: absolute;
  bottom: 0.5em;
  width: 300px;
  color: #fff;
}
#chat input {
  background: rgba(120,0,0,0.3);
  border: none;
  width: 100%;
  color: #fff;
}
#chat ul {
  list-style: none;
  padding: 0;
  margin: 0;
  background: rgba(255,255,255,0.1);
  width: 100%;
}
#chat .admin {
  font-weight: bold;
  color: #c00;
}
#chat .party {
  font-weight: bold;
}
#chat .guild {
  color: #0f0;
}
#exp {
  width: 100%;
  background: #000;
}
#exp div {
  background: #c0c0c0;
  height: 7px;
}
#hud {
  position: absolute;
  padding: 3px;
}
#hud .hudMap {
  background: #534741;
  top: 5px;
  left: 5px;
  width: 82px;
  height: 82px;
  position: absolute;
  -webkit-border-radius: 9999999px;
  border-radius: 9999999px;
  padding: 19px;
  font-size: 40px;
  font-family: Impact;
  text-align: center;
  color: #fff;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
#hud .hud {
  background: url("/ui/hud-bg.png");
  width: 223px;
  height: 86px;
  position: relative;
}
#hud .hud .bar {
  width: 119px;
  height: 9px;
  position: absolute;
}
#hud .hud .bar div {
  height: 9px;
  -webkit-transition: 0.4s ease;
  -moz-transition: 0.4s ease;
  -o-transition: 0.4s ease;
  -ms-transition: 0.4s ease;
  transition: 0.4s ease;
  -webkit-transition: 1.1s linear;
  -moz-transition: 1.1s linear;
  -o-transition: 1.1s linear;
  -ms-transition: 1.1s linear;
  transition: 1.1s linear;
}
#hud .hud .bar.hp {
  top: 14px;
  left: 84px;
}
#hud .hud .bar.hp div {
  background: url("/ui/hp-bar.png");
}
#hud .hud .bar.mp {
  top: 28px;
  left: 84px;
}
#hud .hud .bar.mp div {
  background: url("/ui/mp-bar.png");
}
#hud .hud .bar.sp {
  top: 28px;
  left: 84px;
}
#hud .hud .bar.sp div {
  background: url("/ui/sp-bar.png");
}
#target-bar {
  background: no-repeat url("/ui/target.png");
  position: absolute;
  width: 159px;
  height: 100px;
  top: 10px;
  left: 45%;
  line-height: 58px;
  font-size: 14px;
  text-shadow: 1px 1px 1px #000;
  color: #fff;
  text-align: center;
/*.points
        //width:200px
        width: 100%
        border-radius:6px
        border: 1px solid black
        background: silver
        margin: 2px 0
        box-sizing: border-box

        div
            height: 7px
            border-radius:6px
            transition: .4s ease
            transition: 1.1s linear
        &.hp div
            background: red
        &.mp div
            height: 4px
            background: blue
        &.tp div
            height: 4px
            background: yellow
            */
}
#target-bar .bar {
  width: 119px;
  height: 9px;
  position: absolute;
  top: 9px;
  left: 20px;
}
#target-bar .bar div {
  height: 9px;
  -webkit-transition: 0.4s ease;
  -moz-transition: 0.4s ease;
  -o-transition: 0.4s ease;
  -ms-transition: 0.4s ease;
  transition: 0.4s ease;
  -webkit-transition: 1.1s linear;
  -moz-transition: 1.1s linear;
  -o-transition: 1.1s linear;
  -ms-transition: 1.1s linear;
  transition: 1.1s linear;
  background: url("/ui/hp-bar.png");
}
#top-right {
  position: absolute;
  padding: 3px;
  right: 0;
  color: #fff;
  background: #332;
}
.window {
  width: 274px;
  height: 424px;
  background: url("/ui/win-bg.png");
  position: absolute;
}
.window .close {
  position: absolute;
  top: 0px;
  left: 241px;
  width: 28px;
  height: 27px;
}
.window .close:hover {
  background: url("/ui/win-close.png");
}
.window .title {
  font-family: Impact;
  text-shadow: 1px 1px 1px #000;
  color: #fff;
  cursor: move;
  text-align: center;
  width: 274px;
  height: 47px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding-top: 10px;
}
.window .scrollbar {
  background: url("/ui/scrollbar-bg.png");
  position: absolute;
  top: 49px;
  right: 5px;
  width: 22px;
  height: 362px;
}
.window .scrollbar .up,
.window .scrollbar .down,
.window .scrollbar .slider {
  position: absolute;
  width: 16px;
  height: 16px;
  left: 3px;
}
.window .scrollbar .up {
  background: url("/ui/scrollbar-up.png");
  top: 2px;
}
.window .scrollbar .up:hover {
  background: url("/ui/scrollbar-up-hover.png");
}
.window .scrollbar .down {
  background: url("/ui/scrollbar-down.png");
  bottom: 2px;
}
.window .scrollbar .down:hover {
  background: url("/ui/scrollbar-down-hover.png");
}
.window .scrollbar .slider {
  background: url("/ui/scrollbar-slider.png");
  bottom: 50px;
}
.window button.btn {
  background: url("/ui/btn.png");
  width: 90px;
  height: 29px;
  font-size: 11pt;
  text-align: center;
  border: 0;
  padding: 0;
  margin: 2px;
  padding-bottom: 4px;
  text-shadow: 1px 1px 1px #000;
  color: #fff;
}
.window button.btn:hover {
  background: url("/ui/btn-hover.png");
}
.window button.btn:disabled {
  background: url("/ui/btn-disabled.png");
}
.window button.btn:active {
  background: url("/ui/btn-active.png");
}
.window .content {
  color: #fff;
  position: absolute;
  top: 50px;
  left: 7px;
  width: 261px;
  height: 363px;
  overflow: hidden;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 11pt;
}
.window .content.red {
  background: url("/ui/win-red.png");
  font-family: sans;
  color: #fff799;
}
.window .content.yellow {
  background: url("/ui/win-yellow.png");
  font-family: sans;
}
.window .content.paper {
  background: no-repeat url("/ui/win-paper.png");
  font-family: sans-serif;
  padding: 45px 35px 10px 10px;
  position: relative;
  color: #46290e;
  -webkit-box-shadow: none;
  box-shadow: none;
}
.window .content.paper .native {
  height: 311px;
}
.window .content.paper .h {
  font-size: 14pt;
  color: #356e0b;
  font-weight: bold;
}
.window .content.paper p {
  font-size: 11pt;
}
.window .content.paper .sello {
  position: absolute;
  top: 10px;
  left: 82px;
  width: 87px;
  height: 42px;
}
.window .content.paper .sello.red {
  background: url("/ui/sello-red.png");
}
.window .content.paper .sello.blue {
  background: url("/ui/sello-blue.png");
}
#equip {
  padding: 10px;
}
#equip .item {
  height: 4em;
  border-bottom: 2px solid #1f1a19;
  margin-bottom: 0.5em;
}
#equip .item:nth-last-of-type(1) {
  border-bottom: 0;
}
#equip .item .slot {
  float: right;
  font-weight: bold;
  display: inline-block;
  width: 32px;
}
#equip .item .name {
  width: 32px;
}
#equip .item .name:before {
  content: '[';
}
#equip .item .name:after {
  content: ']';
}
#equip .item .desc {
  display: inline-block;
}
/* icon 28x28 */
#inventory {
  background: url("/ui/win-inventory.png");
  font-size: 0;
  padding: 14px 0 18px 18px;
}
#inventory .img {
  position: relative;
  display: inline-block;
  width: 32px;
  height: 32px;
  margin: 2px 3px;
}
#inventory .img:hover .img-over {
  background: no-repeat url("/ui/spell-bar-glass.png");
  width: 32px;
  height: 32px;
  position: absolute;
  top: 1px;
  left: 0px;
}
#inventory img {
  margin: 0;
  width: 32px;
  height: 32px;
}
#inventory #gold {
  font-family: Impact;
  text-shadow: 1px 1px 1px #000;
  color: #fff;
  background: no-repeat url("/ui/win-x-gold.png");
  position: absolute;
  width: 70px;
  bottom: 10px;
  right: 0px;
  color: #fff;
  padding-left: 35px;
  line-height: 21px;
  font-size: 12px;
}
#sys.s5 {
  background: no-repeat url("/ui/sys-bg-5.png");
  background-position: 0 11px;
  position: absolute;
  width: 204px;
  height: 35px;
  bottom: 7px;
  right: 10px;
  padding-left: 15px;
}
#sys .icon {
  position: relative;
  background: url("/ui/sys-icons.png");
  width: 26px;
  height: 26px;
  display: inline-block;
  margin-right: 11px;
}
#sys .icon:hover .tooltip {
  display: block;
}
#sys .icon.hammer {
  background-position: 0 0;
}
#sys .icon.helment {
  background-position: -26px 0;
}
#sys .icon.bubble {
  background-position: -52px 0;
}
#sys .icon.cup {
  background-position: -78px 0;
}
#sys .icon.door {
  background-position: 52px 0;
}
#sys .icon.pounch {
  background-position: 26px 0;
}
/*# sourceMappingURL=data:application/json;base64, */